'use strict'

const ESCAPE_CHARS_MAP = Array.from(' "<>&%^|').reduce((accum, c) => Object.assign(accum, { [c]: true }), {})
const ESCAPE_CHARS_RX = new RegExp('[' + Object.keys(ESCAPE_CHARS_MAP).join('') + ']')
const ESCAPE_RS_RX = /\\+(?=")/g

function escapeForCmd (val) {
  if (!val) return '""'
  if (!ESCAPE_CHARS_RX.test(val)) return val
  const chars = val.charAt() === '-' ? ['\\'] : []
  const q = '"'
  let backslashBeforeQuote
  for (const c of val) {
    if (ESCAPE_CHARS_MAP[c]) {
      const lastChar = chars[chars.length - 1]
      lastChar === q ? chars.pop() : chars.push(lastChar === '\\' ? (backslashBeforeQuote = true) && q : q)
      c === q ? chars.push(c, c, q) : chars.push(c, q)
    } else {
      chars.push(c)
    }
  }
  return backslashBeforeQuote ? chars.join('').replace(ESCAPE_RS_RX, (m) => '\\'.repeat(m.length * 2)) : chars.join('')
}

module.exports = escapeForCmd
